// source: SweepstakeService.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');
goog.object.extend(proto, google_protobuf_descriptor_pb);
var Common_pb = require('./Common_pb.js');
goog.object.extend(proto, Common_pb);
var TicketService_pb = require('./TicketService_pb.js');
goog.object.extend(proto, TicketService_pb);
goog.exportSymbol('proto.com.footyandsweep.JoinCode', null, global);
goog.exportSymbol('proto.com.footyandsweep.Pair', null, global);
goog.exportSymbol('proto.com.footyandsweep.PairList', null, global);
goog.exportSymbol('proto.com.footyandsweep.Sweepstake', null, global);
goog.exportSymbol('proto.com.footyandsweep.SweepstakeList', null, global);
goog.exportSymbol('proto.com.footyandsweep.SweepstakeStatus', null, global);
goog.exportSymbol('proto.com.footyandsweep.SweepstakeTypeCommon', null, global);
goog.exportSymbol('proto.com.footyandsweep.sweepstakestatus', null, global);
goog.exportSymbol('proto.com.footyandsweep.sweepstaketype', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.footyandsweep.Sweepstake = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.footyandsweep.Sweepstake, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.footyandsweep.Sweepstake.displayName = 'proto.com.footyandsweep.Sweepstake';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.footyandsweep.JoinCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.footyandsweep.JoinCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.footyandsweep.JoinCode.displayName = 'proto.com.footyandsweep.JoinCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.footyandsweep.Pair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.footyandsweep.Pair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.footyandsweep.Pair.displayName = 'proto.com.footyandsweep.Pair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.footyandsweep.PairList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.footyandsweep.PairList.repeatedFields_, null);
};
goog.inherits(proto.com.footyandsweep.PairList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.footyandsweep.PairList.displayName = 'proto.com.footyandsweep.PairList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.footyandsweep.SweepstakeList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.footyandsweep.SweepstakeList.repeatedFields_, null);
};
goog.inherits(proto.com.footyandsweep.SweepstakeList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.footyandsweep.SweepstakeList.displayName = 'proto.com.footyandsweep.SweepstakeList';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.footyandsweep.Sweepstake.prototype.toObject = function(opt_includeInstance) {
  return proto.com.footyandsweep.Sweepstake.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.footyandsweep.Sweepstake} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.footyandsweep.Sweepstake.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    joincode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    statuscode: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isprivate: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    ownerid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sweepstakeeventid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    sweepstaketypecode: jspb.Message.getFieldWithDefault(msg, 8, 0),
    sweepstakelistsize: jspb.Message.getFieldWithDefault(msg, 10, 0),
    minimumplayers: jspb.Message.getFieldWithDefault(msg, 11, 0),
    maximumplayertickets: jspb.Message.getFieldWithDefault(msg, 12, 0),
    stake: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    totalnumberoftickets: jspb.Message.getFieldWithDefault(msg, 14, 0),
    sweepstaketype: jspb.Message.getFieldWithDefault(msg, 15, 0),
    status: jspb.Message.getFieldWithDefault(msg, 16, 0),
    numberofrange: jspb.Message.getFieldWithDefault(msg, 17, 0),
    numberofmax: jspb.Message.getFieldWithDefault(msg, 18, 0),
    maxnumberofranges: jspb.Message.getFieldWithDefault(msg, 19, 0),
    correctscoremax: jspb.Message.getFieldWithDefault(msg, 20, 0),
    minuterange: jspb.Message.getFieldWithDefault(msg, 21, 0),
    includebench: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    includestartinggoalkeeper: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    includenogoalscorer: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    includeowngoals: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    footballmatchid: jspb.Message.getFieldWithDefault(msg, 26, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.footyandsweep.Sweepstake}
 */
proto.com.footyandsweep.Sweepstake.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.footyandsweep.Sweepstake;
  return proto.com.footyandsweep.Sweepstake.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.footyandsweep.Sweepstake} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.footyandsweep.Sweepstake}
 */
proto.com.footyandsweep.Sweepstake.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setJoincode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatuscode(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsprivate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSweepstakeeventid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSweepstaketypecode(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSweepstakelistsize(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinimumplayers(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaximumplayertickets(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStake(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalnumberoftickets(value);
      break;
    case 15:
      var value = /** @type {!proto.com.footyandsweep.SweepstakeTypeCommon} */ (reader.readEnum());
      msg.setSweepstaketype(value);
      break;
    case 16:
      var value = /** @type {!proto.com.footyandsweep.SweepstakeStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofrange(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofmax(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxnumberofranges(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCorrectscoremax(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinuterange(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludebench(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludestartinggoalkeeper(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludenogoalscorer(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeowngoals(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setFootballmatchid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.footyandsweep.Sweepstake.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.footyandsweep.Sweepstake.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.footyandsweep.Sweepstake} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.footyandsweep.Sweepstake.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getJoincode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatuscode();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIsprivate();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getOwnerid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSweepstakeeventid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSweepstaketypecode();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getSweepstakelistsize();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getMinimumplayers();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getMaximumplayertickets();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getStake();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getTotalnumberoftickets();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getSweepstaketype();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = message.getNumberofrange();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getNumberofmax();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getMaxnumberofranges();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getCorrectscoremax();
  if (f !== 0) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = message.getMinuterange();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getIncludebench();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getIncludestartinggoalkeeper();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getIncludenogoalscorer();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getIncludeowngoals();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getFootballmatchid();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.footyandsweep.Sweepstake.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.footyandsweep.Sweepstake.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string joinCode = 3;
 * @return {string}
 */
proto.com.footyandsweep.Sweepstake.prototype.getJoincode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setJoincode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 statusCode = 4;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getStatuscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setStatuscode = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool isPrivate = 5;
 * @return {boolean}
 */
proto.com.footyandsweep.Sweepstake.prototype.getIsprivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setIsprivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string ownerId = 6;
 * @return {string}
 */
proto.com.footyandsweep.Sweepstake.prototype.getOwnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setOwnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string sweepstakeEventId = 7;
 * @return {string}
 */
proto.com.footyandsweep.Sweepstake.prototype.getSweepstakeeventid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setSweepstakeeventid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 sweepstakeTypeCode = 8;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getSweepstaketypecode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setSweepstaketypecode = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 sweepstakeListSize = 10;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getSweepstakelistsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setSweepstakelistsize = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 minimumPlayers = 11;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getMinimumplayers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setMinimumplayers = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 maximumPlayerTickets = 12;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getMaximumplayertickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setMaximumplayertickets = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional double stake = 13;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getStake = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setStake = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional int32 totalNumberOfTickets = 14;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getTotalnumberoftickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setTotalnumberoftickets = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional SweepstakeTypeCommon sweepstakeType = 15;
 * @return {!proto.com.footyandsweep.SweepstakeTypeCommon}
 */
proto.com.footyandsweep.Sweepstake.prototype.getSweepstaketype = function() {
  return /** @type {!proto.com.footyandsweep.SweepstakeTypeCommon} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.com.footyandsweep.SweepstakeTypeCommon} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setSweepstaketype = function(value) {
  return jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * optional SweepstakeStatus status = 16;
 * @return {!proto.com.footyandsweep.SweepstakeStatus}
 */
proto.com.footyandsweep.Sweepstake.prototype.getStatus = function() {
  return /** @type {!proto.com.footyandsweep.SweepstakeStatus} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.com.footyandsweep.SweepstakeStatus} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


/**
 * optional int32 numberOfRange = 17;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getNumberofrange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setNumberofrange = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 numberOfMax = 18;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getNumberofmax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setNumberofmax = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 maxNumberOfRanges = 19;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getMaxnumberofranges = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setMaxnumberofranges = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int64 correctScoreMax = 20;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getCorrectscoremax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setCorrectscoremax = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int64 minuteRange = 21;
 * @return {number}
 */
proto.com.footyandsweep.Sweepstake.prototype.getMinuterange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setMinuterange = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional bool includeBench = 22;
 * @return {boolean}
 */
proto.com.footyandsweep.Sweepstake.prototype.getIncludebench = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setIncludebench = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool includeStartingGoalkeeper = 23;
 * @return {boolean}
 */
proto.com.footyandsweep.Sweepstake.prototype.getIncludestartinggoalkeeper = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setIncludestartinggoalkeeper = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional bool includeNoGoalScorer = 24;
 * @return {boolean}
 */
proto.com.footyandsweep.Sweepstake.prototype.getIncludenogoalscorer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setIncludenogoalscorer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional bool includeOwnGoals = 25;
 * @return {boolean}
 */
proto.com.footyandsweep.Sweepstake.prototype.getIncludeowngoals = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setIncludeowngoals = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional string footballMatchId = 26;
 * @return {string}
 */
proto.com.footyandsweep.Sweepstake.prototype.getFootballmatchid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.footyandsweep.Sweepstake} returns this
 */
proto.com.footyandsweep.Sweepstake.prototype.setFootballmatchid = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.footyandsweep.JoinCode.prototype.toObject = function(opt_includeInstance) {
  return proto.com.footyandsweep.JoinCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.footyandsweep.JoinCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.footyandsweep.JoinCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    joincode: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.footyandsweep.JoinCode}
 */
proto.com.footyandsweep.JoinCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.footyandsweep.JoinCode;
  return proto.com.footyandsweep.JoinCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.footyandsweep.JoinCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.footyandsweep.JoinCode}
 */
proto.com.footyandsweep.JoinCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJoincode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.footyandsweep.JoinCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.footyandsweep.JoinCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.footyandsweep.JoinCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.footyandsweep.JoinCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJoincode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string joinCode = 1;
 * @return {string}
 */
proto.com.footyandsweep.JoinCode.prototype.getJoincode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.footyandsweep.JoinCode} returns this
 */
proto.com.footyandsweep.JoinCode.prototype.setJoincode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.footyandsweep.Pair.prototype.toObject = function(opt_includeInstance) {
  return proto.com.footyandsweep.Pair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.footyandsweep.Pair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.footyandsweep.Pair.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.footyandsweep.Pair}
 */
proto.com.footyandsweep.Pair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.footyandsweep.Pair;
  return proto.com.footyandsweep.Pair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.footyandsweep.Pair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.footyandsweep.Pair}
 */
proto.com.footyandsweep.Pair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.footyandsweep.Pair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.footyandsweep.Pair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.footyandsweep.Pair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.footyandsweep.Pair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 key = 1;
 * @return {number}
 */
proto.com.footyandsweep.Pair.prototype.getKey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.footyandsweep.Pair} returns this
 */
proto.com.footyandsweep.Pair.prototype.setKey = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.com.footyandsweep.Pair.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.footyandsweep.Pair} returns this
 */
proto.com.footyandsweep.Pair.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.footyandsweep.PairList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.footyandsweep.PairList.prototype.toObject = function(opt_includeInstance) {
  return proto.com.footyandsweep.PairList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.footyandsweep.PairList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.footyandsweep.PairList.toObject = function(includeInstance, msg) {
  var f, obj = {
    pairsList: jspb.Message.toObjectList(msg.getPairsList(),
    proto.com.footyandsweep.Pair.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.footyandsweep.PairList}
 */
proto.com.footyandsweep.PairList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.footyandsweep.PairList;
  return proto.com.footyandsweep.PairList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.footyandsweep.PairList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.footyandsweep.PairList}
 */
proto.com.footyandsweep.PairList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.footyandsweep.Pair;
      reader.readMessage(value,proto.com.footyandsweep.Pair.deserializeBinaryFromReader);
      msg.addPairs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.footyandsweep.PairList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.footyandsweep.PairList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.footyandsweep.PairList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.footyandsweep.PairList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPairsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.footyandsweep.Pair.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Pair pairs = 1;
 * @return {!Array<!proto.com.footyandsweep.Pair>}
 */
proto.com.footyandsweep.PairList.prototype.getPairsList = function() {
  return /** @type{!Array<!proto.com.footyandsweep.Pair>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.footyandsweep.Pair, 1));
};


/**
 * @param {!Array<!proto.com.footyandsweep.Pair>} value
 * @return {!proto.com.footyandsweep.PairList} returns this
*/
proto.com.footyandsweep.PairList.prototype.setPairsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.footyandsweep.Pair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.footyandsweep.Pair}
 */
proto.com.footyandsweep.PairList.prototype.addPairs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.footyandsweep.Pair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.footyandsweep.PairList} returns this
 */
proto.com.footyandsweep.PairList.prototype.clearPairsList = function() {
  return this.setPairsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.footyandsweep.SweepstakeList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.footyandsweep.SweepstakeList.prototype.toObject = function(opt_includeInstance) {
  return proto.com.footyandsweep.SweepstakeList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.footyandsweep.SweepstakeList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.footyandsweep.SweepstakeList.toObject = function(includeInstance, msg) {
  var f, obj = {
    sweepstakesList: jspb.Message.toObjectList(msg.getSweepstakesList(),
    proto.com.footyandsweep.Sweepstake.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.footyandsweep.SweepstakeList}
 */
proto.com.footyandsweep.SweepstakeList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.footyandsweep.SweepstakeList;
  return proto.com.footyandsweep.SweepstakeList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.footyandsweep.SweepstakeList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.footyandsweep.SweepstakeList}
 */
proto.com.footyandsweep.SweepstakeList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.footyandsweep.Sweepstake;
      reader.readMessage(value,proto.com.footyandsweep.Sweepstake.deserializeBinaryFromReader);
      msg.addSweepstakes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.footyandsweep.SweepstakeList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.footyandsweep.SweepstakeList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.footyandsweep.SweepstakeList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.footyandsweep.SweepstakeList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSweepstakesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.footyandsweep.Sweepstake.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Sweepstake sweepstakes = 1;
 * @return {!Array<!proto.com.footyandsweep.Sweepstake>}
 */
proto.com.footyandsweep.SweepstakeList.prototype.getSweepstakesList = function() {
  return /** @type{!Array<!proto.com.footyandsweep.Sweepstake>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.footyandsweep.Sweepstake, 1));
};


/**
 * @param {!Array<!proto.com.footyandsweep.Sweepstake>} value
 * @return {!proto.com.footyandsweep.SweepstakeList} returns this
*/
proto.com.footyandsweep.SweepstakeList.prototype.setSweepstakesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.footyandsweep.Sweepstake=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.footyandsweep.Sweepstake}
 */
proto.com.footyandsweep.SweepstakeList.prototype.addSweepstakes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.footyandsweep.Sweepstake, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.footyandsweep.SweepstakeList} returns this
 */
proto.com.footyandsweep.SweepstakeList.prototype.clearSweepstakesList = function() {
  return this.setSweepstakesList([]);
};


/**
 * @enum {number}
 */
proto.com.footyandsweep.SweepstakeStatus = {
  OPEN: 0,
  ALLOCATED: 1,
  CLOSED: 2
};

/**
 * @enum {number}
 */
proto.com.footyandsweep.SweepstakeTypeCommon = {
  CORRECT_SCORE_FT: 0,
  CORRECT_SCORE_HT: 1
};


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `sweepstakestatus`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.com.footyandsweep.sweepstakestatus = new jspb.ExtensionFieldInfo(
    5000,
    {sweepstakestatus: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

google_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[5000] = new jspb.ExtensionFieldBinaryInfo(
    proto.com.footyandsweep.sweepstakestatus,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.EnumValueOptions.extensions[5000] = proto.com.footyandsweep.sweepstakestatus;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `sweepstaketype`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.com.footyandsweep.sweepstaketype = new jspb.ExtensionFieldInfo(
    5001,
    {sweepstaketype: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

google_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[5001] = new jspb.ExtensionFieldBinaryInfo(
    proto.com.footyandsweep.sweepstaketype,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.EnumValueOptions.extensions[5001] = proto.com.footyandsweep.sweepstaketype;

goog.object.extend(exports, proto.com.footyandsweep);

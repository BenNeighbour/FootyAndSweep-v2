spring:
  application:
    name: 'api-result-engine'

  kafka:
    bootstrap-servers: api-kafka.default.svc.cluster.local:9092
    consumer:
      bootstrap-servers: api-kafka.default.svc.cluster.local:9092
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: api-event
      enable-auto-commit: false

    producer:
      bootstrap-servers: api-kafka.default.svc.cluster.local:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  jpa:
    generate-ddl: true

    show-sql: true

    properties:
      hibernate:
        ddl-auto: update
        dialect: org.hibernate.dialect.PostgreSQLDialect

    hibernate:
      default_batch_fetch_size: 16

    datasource:
      url: ${SPRING_DATASOURCE_URL}
      username: ${SPRING_DATASOURCE_USERNAME}
      password: ${SPRING_DATASOURCE_PASSWORD}
      driver-class-name: org.postgresql.Driver

  redis:
    host: "api-redis-cache"
    port: 6379

  cache:
    type: redis

kafka:
  bootstrapAddress: api-kafka.default.svc.cluster.local:9092

  acks: all
  retries: 5
  retry:
    backoff:
      ms: 5000
